<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whh.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.whh.bean.pojo.Permission">
        <constructor>
            <idArg column="permission_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="perms" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="permission" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="resource_type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="parent_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    permission_id, url, perms, permission, resource_type, parent_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where permission_id = #{permissionId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.whh.bean.pojo.Permission">
    insert into permission (permission_id, url, perms, 
      permission, resource_type, parent_id
      )
    values (#{permissionId,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{perms,jdbcType=VARCHAR}, 
      #{permission,jdbcType=VARCHAR}, #{resourceType,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.whh.bean.pojo.Permission">
        insert into permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="permissionId != null">
                permission_id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="perms != null">
                perms,
            </if>
            <if test="permission != null">
                permission,
            </if>
            <if test="resourceType != null">
                resource_type,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="permissionId != null">
                #{permissionId,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="perms != null">
                #{perms,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                #{permission,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                #{resourceType,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.whh.bean.pojo.Permission">
        update permission
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="perms != null">
                perms = #{perms,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                permission = #{permission,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
        </set>
        where permission_id = #{permissionId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.whh.bean.pojo.Permission">
    update permission
    set url = #{url,jdbcType=VARCHAR},
      perms = #{perms,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER}
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </update>


    <select id="selectByRoleId" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where role_id=#{roleid}
    </select>

    <select id="loadMenu" parameterType="map" resultMap="BaseResultMap">
    select p.permission_id, p.url, p.permission,p.perms ,p.resource_type, p.parent_id
    from permission p left join role_permission rp
    on p.permission_id=rp.permission_id
    left join user_role ur
    on rp.role_id=ur.role_id
    where user_id=#{userId} and p.resource_type= #{resourceType}
    group by p.permission_id
  </select>

    <select id="selectByRoleIds" parameterType="list" resultMap="BaseResultMap">
        select p.permission_id, url, permission,perms, resource_type, parent_id
        from permission p left join role_permission rp
        on p.permission_id=rp.permission_id
        where perms is not null and rp.role_id in
        <foreach collection="list" item="roleid" index="index" open="(" close=")" separator=",">
            #{roleid}
        </foreach>
        group by p.perms
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
    </select>

</mapper>